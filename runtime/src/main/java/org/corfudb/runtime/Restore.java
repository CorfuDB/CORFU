package org.corfudb.runtime;

import org.corfudb.protocols.logprotocol.OpaqueEntry;
import org.corfudb.protocols.logprotocol.SMREntry;
import org.corfudb.runtime.collections.CorfuStore;
import org.corfudb.runtime.collections.TxBuilder;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.List;
import java.util.UUID;

import static org.corfudb.runtime.view.TableRegistry.CORFU_SYSTEM_NAMESPACE;

public class Restore {
    /**
     * Read the file generated by backupTable
     * @param fileName
     * @param streamId
     * @return
     */
    public static boolean restoreTable(String fileName, UUID streamId,  UUID srcStreamId, CorfuStore corfuStore) throws IOException, ClassNotFoundException {
        FileInputStream fileInput = new FileInputStream(fileName);
        ObjectInputStream objectInputStream = new ObjectInputStream(fileInput);

        /**
         * For each opaque entry , write a transaction to the database.
         */
        while(fileInput.available() > 0) {
            OpaqueEntry opaqueEntry = (OpaqueEntry) objectInputStream.readObject();
            List<SMREntry> smrEntries = opaqueEntry.getEntries().get(srcStreamId);

            if (smrEntries == null || smrEntries.isEmpty()) {
                continue;
            }

            CorfuStoreMetadata.Timestamp ts = corfuStore.getTimestamp();
            TxBuilder txBuilder = corfuStore.tx(CORFU_SYSTEM_NAMESPACE);

            for (SMREntry smrEntry : smrEntries) {
                txBuilder.logUpdate(streamId, smrEntry);
            }

            txBuilder.commit(ts);
        }

        objectInputStream.close();
        fileInput.close();
        return true;
    }
}
