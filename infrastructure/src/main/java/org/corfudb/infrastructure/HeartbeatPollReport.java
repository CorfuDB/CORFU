package org.corfudb.infrastructure;

import com.google.common.collect.ImmutableMap;
import lombok.Data;
import org.corfudb.format.Types.NetworkMetrics;
import org.corfudb.format.Types.NodeView;

import java.util.Map;

/**
 * Report returned by the heartbeat polling service.
 * This Report contains the following:
 * - nodeViewMap: Map of nodeViews collected from all peers in
 * the cluster.
 * - networkMetricsMap: Map of the network metrics generated by
 * the polling service from the heartbeat requests and responses
 * from all peers.
 * <p>
 * This state is utilized by the management server to
 * make decisions on the state of the cluster and handle
 * failures if needed.
 * <p>
 * Created by zlokhandwala on 2/23/17.
 */
@Data
public class HeartbeatPollReport {

    // Mapping of peer endpoints to their nodeView which contains
    // the health of the node (ServerMetrics) and its view of the cluster (Map of NetworkMetrics)
    private final ImmutableMap<String, NodeView> nodeViewMap;
    // This current node's view of the cluster.
    private final ImmutableMap<String, NetworkMetrics> networkMetricsMap;

    private HeartbeatPollReport(HeartbeatPollReportBuilder heartbeatPollReportBuilder) {
        this.nodeViewMap = heartbeatPollReportBuilder.nodeViewMap;
        this.networkMetricsMap = heartbeatPollReportBuilder.networkMetricsMap;
    }

    /**
     * Builder to generate the HeartbeatPollReport
     */
    public static class HeartbeatPollReportBuilder {

        private ImmutableMap<String, NodeView> nodeViewMap;
        private ImmutableMap<String, NetworkMetrics> networkMetricsMap;

        public HeartbeatPollReportBuilder() {
        }

        public HeartbeatPollReportBuilder setNodeViewMap(Map<String, NodeView> nodeViewMap) {
            this.nodeViewMap = ImmutableMap.copyOf(nodeViewMap);
            return this;
        }

        public HeartbeatPollReportBuilder setNetworkMetricsMap(Map<String, NetworkMetrics> networkMetricsMap) {
            this.networkMetricsMap = ImmutableMap.copyOf(networkMetricsMap);
            return this;
        }

        public HeartbeatPollReport build() {
            return new HeartbeatPollReport(this);
        }
    }
}
