#! /usr/bin/env bash

### BEGIN INIT INFO
# Provides:             corfu_server
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Corfu Infrastructure Server
### END INIT INFO

# BEGIN CORFU CONFIG BLOCK
export CORFU_HEAP_SIZE_PERCENT=20
# END CORFU CONFIG BLOCK

umask 022

ROLENAME="Corfu Infrastructure Server"
PIDDIR=/var/run/corfu
LOGDIR=/var/log/corfu
DATADIR=/config/corfu
CBM_BARRIER=/config/cbm/corfu/START
TLS_SIGNAL_FILE=/config/corfu/TLS_ENABLED
CORFU_USER=corfu
PORT=9000
. /lib/lsb/init-functions

export PATH="${PATH:+$PATH:}/usr/sbin/:usr/bin"

corfu_user_exist=$(id -u $CORFU_USER > /dev/null 2>&1; echo $?)

wait_for_condition () {
    until [ -f $CBM_BARRIER ]
    do
        sleep 5
    done
}

signal_tls () {
    touch $TLS_SIGNAL_FILE
}

ensure_dirs () {
    if [ ! -d $PIDDIR ]; then
        mkdir -p $PIDDIR
        chmod 755 $PIDDIR
    fi
    if [ ! -d $LOGDIR ]; then
        mkdir -p $LOGDIR
    fi
}

change_ownership () {
    if [ "$corfu_user_exist" = 0 ]; then
        chown -R $CORFU_USER:$CORFU_USER $PIDDIR
        chown -R $CORFU_USER:$CORFU_USER $LOGDIR
        chown -R $CORFU_USER:$CORFU_USER $DATADIR
    fi
}

# By default corfu server can use up to 20% of total memory
# If manager + policy mixed deployment is used, use 18% of total memory instead
adjust_memory () {
    has_manager_role=$(grep "nsx-manager" /etc/nsx_issue > /dev/null 2>&1; echo $?)
    has_policy_role=$(grep "nsx-policy-manager" /etc/nsx_issue > /dev/null 2>&1; echo $?)
    if [ "$has_manager_role" = 0  ] && [ "$has_policy_role" = 0  ]; then
        sed -i -e "s/wrapper.java.maxmemory.percent=20/wrapper.java.maxmemory.percent=18/" /usr/tanuki/conf/corfu-server-wrapper.conf
        sed -i -e "s/wrapper.java.maxmemory.percent=20/wrapper.java.maxmemory.percent=18/" /usr/tanuki/conf/corfu-server-wrapper_profile.conf
    fi
}

ensure_profile_port () {
    op=$1
    set +e
    iptables -w -C INPUT -i eth0 -p tcp -m tcp --dport 54322 --tcp-flags FIN,SYN,RST,ACK SYN -j ACCEPT 2> /dev/null
    port_stat=$?
    set -e
    if [ $op = "profile" ] && [ ${port_stat} -ne 0 ]; then
        iptables -w -A INPUT -i eth0 -p tcp -m tcp --dport 54322 --tcp-flags FIN,SYN,RST,ACK SYN -j ACCEPT 2> /dev/null
    elif [ $op = "stop" ] && [ ${port_stat} -eq 0 ]; then
        iptables -w -D INPUT -i eth0 -p tcp -m tcp --dport 54322 --tcp-flags FIN,SYN,RST,ACK SYN -j ACCEPT 2> /dev/null
    fi
}

case "$1" in
    start|profile)
        log_daemon_msg "Starting $ROLENAME on port $PORT"
        ensure_dirs
        signal_tls
        ensure_profile_port $1
        wait_for_condition
        change_ownership
        adjust_memory
        /usr/tanuki/bin/corfu-server-wrapper $1
        ;;
    stop)
        log_daemon_msg "Stopping $ROLENAME on port $PORT"
        /usr/tanuki/bin/corfu-server-wrapper $1
        ensure_profile_port $1
        ;;
    restart)
        $0 stop
        sleep 1
        $0 start
        ;;
    status)
        /usr/tanuki/bin/corfu-server-wrapper $1
        ;;
    *)
        log_action_msg "Usage $0 {start|profile|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
