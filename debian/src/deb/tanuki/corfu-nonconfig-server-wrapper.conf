#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial

# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug

# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license-NSX-Corfu.conf

# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE

#********************************************************************
# Wrapper Localization
#********************************************************************
# Specify the locale which the Wrapper should use.  By default the system
#  locale is used.
#wrapper.lang=en_US # en_US or ja_JP

# Specify the location of the Wrapper's language resources.  If these are
#  missing, the Wrapper will default to the en_US locale.
wrapper.lang.folder=../lang

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=java
#  Specify a specific java binary:
set.JAVA_HOME=/usr/java/jre
set.MALLOC_TRIM_THRESHOLD_=1310720
wrapper.java.command=%JAVA_HOME%/bin/java

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/wrapper.jar
wrapper.java.classpath.2=/usr/share/corfu/lib/cmdlets-0.3.0.20200218032544.7172-shaded.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-Dlogback.configurationFile=/usr/share/corfu/conf/corfu-nonconfig-logback.prod.xml
wrapper.java.additional.2=-verbose:gc
wrapper.java.additional.3=-XX:+PrintGCDetails
wrapper.java.additional.4=-XX:+PrintGCTimeStamps
wrapper.java.additional.5=-XX:+PrintGCDateStamps
wrapper.java.additional.6=-Xloggc:/dev/shm/corfu.9040.gc.log
wrapper.java.additional.7=-XX:+UseG1GC
wrapper.java.additional.8=-XX:+UseStringDeduplication
wrapper.java.additional.9=-XX:+UseGCLogFileRotation
wrapper.java.additional.10=-XX:NumberOfGCLogFiles=10
wrapper.java.additional.11=-XX:GCLogFileSize=5M
wrapper.java.additional.12=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.13=-XX:HeapDumpPath=/image/core/corfu-nonconfig_oom.hprof
wrapper.java.additional.14=-XX:OnOutOfMemoryError="gzip -f /image/core/corfu-nonconfig_oom.hprof"
wrapper.java.additional.14.stripquotes=true
wrapper.java.additional.15=-Djdk.nio.maxCachedBufferSize=1048576
wrapper.java.additional.16=-Dio.netty.recycler.maxCapacityPerThread=0
wrapper.java.additional.17=-XX:+PrintGCApplicationStoppedTime
wrapper.java.additional.18=-XX:+PrintGCApplicationConcurrentTime
# java additional properties file; this can be overridden by a file,
# In order to override, wrapper script will pass another filename.
#wrapper.java.additional_file=

# Initial Java Heap Size (in percentage)
wrapper.java.initmemory.percent=4

# Maximum Java Heap Size (in percentage)
wrapper.java.maxmemory.percent=4

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=org.corfudb.infrastructure.CorfuServer
wrapper.app.parameter.2=-l
wrapper.app.parameter.3=/nonconfig/corfu
wrapper.app.parameter.4=-q
wrapper.app.parameter.5=eth0
wrapper.app.parameter.6=-c
wrapper.app.parameter.7=0.3
wrapper.app.parameter.8=-k
wrapper.app.parameter.9=5000000
wrapper.app.parameter.10=-d
wrapper.app.parameter.11=DEBUG
wrapper.app.parameter.12=--enable-tls
wrapper.app.parameter.13=--enable-tls-mutual-auth
wrapper.app.parameter.14=-u
wrapper.app.parameter.15=/config/cluster-manager/corfu/private/keystore.jks
wrapper.app.parameter.16=-f
wrapper.app.parameter.17=/config/cluster-manager/corfu/private/keystore.password
wrapper.app.parameter.18=-r
wrapper.app.parameter.19=/config/cluster-manager/corfu/public/truststore.jks
wrapper.app.parameter.20=-w
wrapper.app.parameter.21=/config/cluster-manager/corfu/public/truststore.password
wrapper.app.parameter.22=9040

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=/var/log/corfu-nonconfig/tanuki.log.ROLLNUM
wrapper.logfile.rollmode=SIZE
wrapper.logfile.umask=026

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=100m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=20

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title="corfu-nonconfig Server"

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=30
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
#  Ignore -verbose:class output to avoid false positives.
wrapper.filter.trigger.1000=[Loaded java.lang.OutOfMemoryError
wrapper.filter.action.1000=NONE
# (Simple match)
wrapper.filter.trigger.1001=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1001=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1001=TRUE
wrapper.filter.action.1001=DUMP,RESTART
wrapper.filter.message.1001=The JVM has run out of memory.

# Timeout for how long Tanuki will wait to restart a frozen JVM
wrapper.ping.timeout=240
wrapper.ping.timeout.action=DUMP,RESTART

# restart attempts
wrapper.max_failed_invocations=10

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure the log attached to event emails.
#wrapper.event.default.email.attach_log=TRUE
#wrapper.event.default.email.maillog.lines=50
#wrapper.event.default.email.maillog.format=LPTM
#wrapper.event.default.email.maillog.loglevel=INFO

# Enable specific event emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_prelaunch.email=TRUE
#wrapper.event.jvm_start.email=TRUE
#wrapper.event.jvm_started.email=TRUE
#wrapper.event.jvm_deadlock.email=TRUE
#wrapper.event.jvm_stop.email=TRUE
#wrapper.event.jvm_stopped.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE
#wrapper.event.jvm_max_failed_invocations.email=TRUE
#wrapper.event.jvm_kill.email=TRUE
#wrapper.event.jvm_killed.email=TRUE
#wrapper.event.jvm_unexpected_exit.email=TRUE
#wrapper.event.wrapper_stop.email=TRUE

# Specify custom mail content
#wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=corfu-nonconfig

# Display name of the service
wrapper.displayname="corfu-nonconfig Server"

# Description of the service
wrapper.description="Wrapper for corfu-nonconfig Server"

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# Restart child process if exit code is not 0
wrapper.on_exit.default=RESTART
wrapper.on_exit.0=SHUTDOWN

wrapper.successful_invocation_time=10
wrapper.request_thread_dump_on_failed_jvm_exit=TRUE

# Set jvm_terminate timeout to 0 so that the wrapper doesn't shut
# down if the JVM's force termination is delayed
wrapper.jvm_terminate.timeout=0

wrapper.java.umask=0027
